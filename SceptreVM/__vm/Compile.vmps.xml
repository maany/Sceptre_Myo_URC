<VisualMicro>
  <Program Name="SceptreVM" Ext=".ino" Location="C:\Projects\Sceptre URC\SceptreVM\SceptreVM">
    <Compile IsDebugStart="1" CompilerErrors="0" ConfigurationName="Debug" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno" SketchName="SceptreVM" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 100;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE_Uart 10;VM_DEBUGGER_TYPE_COSA 11;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_HARDWARESERIAL;VM_DEBUG_BREAKPAUSE;VM_DEBUG_AUTO_REPORTING;VM_DEBUG_MEM_CHECK 1;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="arduino16x" Package="arduino" Platform="avr" Architecture="avr">
      <Board Name="uno" Description="Arduino/Genuino Uno" CoreFolder="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" VariantFullPath="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\standard" McuIdePath="C:\Program Files (x86)\Arduino" McuSketchBookPath="C:\Users\Mayank\Documents\Arduino" name="Arduino/Genuino Uno" vid.0="0x2341" pid.0="0x0043" vid.1="0x2341" pid.1="0x0001" vid.2="0x2A03" pid.2="0x0043" vid.3="0x2341" pid.3="0x0243" upload.tool="avrdude" upload.protocol="arduino" upload.maximum_size="32256" upload.maximum_data_size="2048" upload.speed="115200" bootloader.tool="avrdude" bootloader.low_fuses="0xFF" bootloader.high_fuses="0xDE" bootloader.extended_fuses="0x05" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x0F" bootloader.file="optiboot/optiboot_atmega328.hex" build.mcu="atmega328p" build.f_cpu="16000000L" build.board="AVR_UNO" build.core="arduino" build.variant="standard" runtime.ide.path="C:\Program Files (x86)\Arduino" build.system.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr\system" runtime.ide.version="165" target_package="arduino" target_platform="avr" runtime.hardware.path="C:\Program Files (x86)\Arduino\hardware\arduino" originalid="uno" intellisense.tools.path="{runtime.tools.avr-gcc.path}/" intellisense.include.paths="{intellisense.tools.path}avr/include/;{intellisense.tools.path}/avr/include/avr/;{intellisense.tools.path}lib\gcc\avr\4.8.1\include" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.erase.params.verbose="-v" tools.atprogram.erase.params.quiet="-q" tools.atprogram.bootloader.params.verbose="-v" tools.atprogram.bootloader.params.quiet="-q" tools.atprogram.bootloader.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {bootloader.verbose}  program -c -f &quot;{runtime.ide.path}/hardware/arduino/avr/bootloaders/{bootloader.file}&quot;" version="1.6.8" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall" compiler.warning_flags.all="-Wall -Wextra" compiler.path="{runtime.tools.avr-gcc.path}/bin/" compiler.c.cmd="avr-gcc" compiler.c.flags="-c -g -Os {compiler.warning_flags} -ffunction-sections -fdata-sections -MMD" compiler.c.elf.flags="{compiler.warning_flags} -Os -Wl,--gc-sections" compiler.c.elf.cmd="avr-gcc" compiler.S.flags="-c -g -x assembler-with-cpp" compiler.cpp.cmd="avr-g++" compiler.cpp.flags="-c -g -Os {compiler.warning_flags} -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD" compiler.ar.cmd="avr-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="avr-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O ihex -R .eeprom" compiler.elf2hex.cmd="avr-objcopy" compiler.ldflags="" compiler.size.cmd="avr-size" build.extra_flags="" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.S.extra_flags="" compiler.cpp.extra_flags="" compiler.ar.extra_flags="" compiler.objcopy.eep.extra_flags="" compiler.elf2hex.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{build.path}/{archive_file}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} &quot;{build.path}/{archive_file}&quot; &quot;-L{build.path}&quot; -lm" recipe.objcopy.eep.pattern="&quot;{compiler.path}{compiler.objcopy.cmd}&quot; {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.eep&quot;" recipe.objcopy.hex.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;" recipe.output.tmp_file="{build.project_name}.hex" recipe.output.save_file="{build.project_name}.{build.variant}.hex" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*" recipe.size.regex.data="^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*" recipe.size.regex.eeprom="^(?:\.eeprom)\s+([0-9]+).*" tools.avrdude.path="{runtime.tools.avrdude.path}" tools.avrdude.cmd.path="{path}/bin/avrdude" tools.avrdude.config.path="{path}/etc/avrdude.conf" tools.avrdude.upload.params.verbose="-v" tools.avrdude.upload.params.quiet="-q -q" tools.avrdude.upload.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {upload.verbose} -p{build.mcu} -c{upload.protocol} -P{serial.port} -b{upload.speed} -D &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.program.params.verbose="-v" tools.avrdude.program.params.quiet="-q -q" tools.avrdude.program.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {program.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.erase.params.verbose="-v" tools.avrdude.erase.params.quiet="-q -q" tools.avrdude.erase.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m" tools.avrdude.bootloader.params.verbose="-v" tools.avrdude.bootloader.params.quiet="-q -q" tools.avrdude.bootloader.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i&quot; -Ulock:w:{bootloader.lock_bits}:m" build.usb_manufacturer="&quot;Unknown&quot;" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'" vm.platform.root.path="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\ssqhfj30.4ar\Micro Platforms\arduino16x" runtime.tools.avrdude.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude-6.0.1-arduino5.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc-4.8.1-arduino5.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.esptool.path="C:\Users\Mayank\AppData\Roaming\arduino15\packages\esp8266\tools\esptool\0.4.5" runtime.tools.esptool-0.4.5.path="C:\Users\Mayank\AppData\Roaming\arduino15\packages\esp8266\tools\esptool\0.4.5" runtime.tools.xtensa-lx106-elf-gcc.path="C:\Users\Mayank\AppData\Roaming\arduino15\packages\esp8266\tools\xtensa-lx106-elf-gcc\1.20.0-26-gb404fb9" runtime.tools.xtensa-lx106-elf-gcc-1.20.0-26-gb404fb9.path="C:\Users\Mayank\AppData\Roaming\arduino15\packages\esp8266\tools\xtensa-lx106-elf-gcc\1.20.0-26-gb404fb9" ide.hint="For use with Arduino.cc 1.6.2+ ide" ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.version="160" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="arduino.h" ide.exe_name="arduino" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" ide.help.reference.path="reference\arduino.cc\en\Reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.appid="arduino16x" location.sketchbook="C:\Users\Mayank\Documents\Arduino" build.core.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" build.core.parentfolder.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores" build.core.coresparentfolder.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr" vm.core.include="arduino.h" vm.boardsource.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr" runtime.platform.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr" vm.platformname.name="avr" build.arch="AVR" build.variant.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\standard" build.architecture="avr" vmresolved.compiler.path="C:\Program Files (x86)\Arduino\hardware\tools\avr\bin\" vmresolved.tools.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" vm.runtime.compiler.showwarnings="false" serial.port.file="COM3" serial.port="COM3" serial.port.num="3" build.source.path="C:\Projects\Sceptre URC\SceptreVM\SceptreVM\SceptreVM.ino" extra.time.local="47811179" includes=" -I&quot;C:\Projects\Sceptre URC\SceptreVM\SceptreVM&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\standard&quot;  -I&quot;C:\Users\Mayank\Documents\Arduino\libraries\Arduino-IRremote&quot;  -I&quot;C:\Users\Mayank\Documents\Arduino\libraries\MyoController&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\ssqhfj30.4ar\Micro Platforms\default\debuggers\VM_DBG&quot;  -I&quot;C:\Program Files (x86)\Arduino\libraries&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\ssqhfj30.4ar\Micro Platforms\default\debuggers&quot;  -I&quot;C:\Users\Mayank\Documents\Arduino\libraries&quot; " build.path="C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno" build.project_name="SceptreVM" build.variant.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\standard" build.core.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" archive_file="core.a" build.path_sketch="C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno" build.path_core="C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno" build.path_libraries="C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno" object_file="C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\VM_DBG\VM_DBG.cpp.o" source_file="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\ssqhfj30.4ar\Micro Platforms\default\debuggers\VM_DBG\VM_DBG.cpp" object_files="&quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\SceptreVM.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\sceptre.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\irPronto.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\irRecv.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\IRremote.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\irSend.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_Aiwa.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_Denon.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_Dish.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_JVC.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_LG.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_Mitsubishi.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_NEC.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_Panasonic.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_RC5_RC6.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_Samsung.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_Sanyo.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_Sharp.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_Sony.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_Template.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\Arduino-IRremote\ir_Whynter.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\MyoController\MyoController.cpp.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\VM_DBG\VM_mem_check.c.o&quot; &quot;C:\Users\Mayank\AppData\Local\V.Micro\Arduino\Builds\SceptreVM\uno\VM_DBG\VM_DBG.cpp.o&quot; " />
    </Platform>
    <Debug EnableBreak="1" DebugEnabled="1" DebugMode="Full" AutoReportAnalogPins="0" LocalPort="COM3" PinRX="" PinTX="" RemotePortTransport="" AutoReportFreeMemory="1" AutoReportDigitalPins="0" RemotePortSpeedWrittenToDebugSource="9600" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="sceptre.cpp, line 202" Id="dc7b8499-a375-490c-af6b-a1ca189501e1" Enabled="0" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\projects\sceptre urc\sceptrevm\sceptrevm\sceptre.cpp" FileLine="202" FileColumn="1" FunctionName="storeCode(decode_results* results)" FunctionLineOffset="59" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='dc7b8499-a375-490c-af6b-a1ca189501e1'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>195				Serial.print(codeType, DEC);
196				Serial.println("");
197			}
198			Serial.println(results-&gt;value, HEX);
199			codeValue = results-&gt;value;
200			codeLen = results-&gt;bits;
201		}
--&gt;202	
203		Code *code = new Code();
204		code-&gt;codeLen = codeLen;
205		code-&gt;codeType = codeType;
206		code-&gt;codeValue = results-&gt;value;
207		Serial.print("code value from inside : "); Serial.println(code-&gt;codeValue,HEX);
208		Serial.print("result value from inside : "); Serial.println(results-&gt;value, HEX);
209		code-&gt;toggle = toggle;
210		code-&gt;rawCodes = rawCodes;
211		//processing_previous_mapping_request = 1;
</Source>
      </BreakPoint>
      <BreakPoint Index="2" Name="sceptre.cpp, line 221" Id="8520b235-bd10-4686-b1c5-180f3a0c0953" Enabled="1" Message="{results.value}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\projects\sceptre urc\sceptrevm\sceptrevm\sceptre.cpp" FileLine="221" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='8520b235-bd10-4686-b1c5-180f3a0c0953'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>214	}
215	
216	void Sceptre::saveCurrentMapping() {
217		getActiveDevice()-&gt;gestureCodeMap[tempGestureCode] = *tempCode;
218		Serial.print("Mapping stored is : "); Serial.print(tempGestureCode); Serial.print(" "); Serial.println(getActiveDevice()-&gt;gestureCodeMap[tempGestureCode].codeValue);
219	}
220	// TODO To check if code is invalid, codeLength will be 0 or lesser
--&gt;221	Code* Sceptre::decodeAndGetCode() {
222		irrecv.decode(&amp;results);
223		Code* code = storeCode(&amp;results);
224		return code;
225	}
226	Code::~Code() {
227		Serial.println("Object is being destroyed");
228	}
229	Myo::Myo() {
230		myoController = MyoController();
</Source>
        <MessageVariables>
          <MessageVariable Name="results.value" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="3" Name="sceptre.cpp, line 210" Id="d23c7292-9b57-45b2-8999-e1d5ca3beada" Enabled="0" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\projects\sceptre urc\sceptrevm\sceptrevm\sceptre.cpp" FileLine="210" FileColumn="1" FunctionName="storeCode(decode_results* results)" FunctionLineOffset="67" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='d23c7292-9b57-45b2-8999-e1d5ca3beada'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>203		Code *code = new Code();
204		code-&gt;codeLen = codeLen;
205		code-&gt;codeType = codeType;
206		code-&gt;codeValue = results-&gt;value;
207		Serial.print("code value from inside : "); Serial.println(code-&gt;codeValue,HEX);
208		Serial.print("result value from inside : "); Serial.println(results-&gt;value, HEX);
209		code-&gt;toggle = toggle;
--&gt;210		code-&gt;rawCodes = rawCodes;
211		//processing_previous_mapping_request = 1;
212		return code;
213		//deviceList[activeDeviceIndex].gestureCodeMap[gestureCode] = code;	
214	}
215	
216	void Sceptre::saveCurrentMapping() {
217		getActiveDevice()-&gt;gestureCodeMap[tempGestureCode] = *tempCode;
218		Serial.print("Mapping stored is : "); Serial.print(tempGestureCode); Serial.print(" "); Serial.println(getActiveDevice()-&gt;gestureCodeMap[tempGestureCode].codeValue);
219	}
</Source>
      </BreakPoint>
      <BreakPoint Index="4" Name="sceptre.cpp, line 207" Id="01581533-b95c-402c-82bb-8b46b054bcb5" Enabled="1" Message="code value is {codeValue} and results value is {results-&gt;value}" MessageTextType="0" PreProcessedMessage="code value is {0} and results value is {1}" Condition="" ConditionType="1" CurrentHits="0" File="c:\projects\sceptre urc\sceptrevm\sceptrevm\sceptre.cpp" FileLine="207" FileColumn="1" FunctionName="storeCode(decode_results* results)" FunctionLineOffset="64" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='01581533-b95c-402c-82bb-8b46b054bcb5'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>200			codeLen = results-&gt;bits;
201		}
202	
203		Code *code = new Code();
204		code-&gt;codeLen = codeLen;
205		code-&gt;codeType = codeType;
206		code-&gt;codeValue = results-&gt;value;
--&gt;207		Serial.print("code value from inside : "); Serial.println(code-&gt;codeValue,HEX);
208		Serial.print("result value from inside : "); Serial.println(results-&gt;value, HEX);
209		code-&gt;toggle = toggle;
210		code-&gt;rawCodes = rawCodes;
211		//processing_previous_mapping_request = 1;
212		return code;
213		//deviceList[activeDeviceIndex].gestureCodeMap[gestureCode] = code;	
214	}
215	
216	void Sceptre::saveCurrentMapping() {
</Source>
        <MessageVariables>
          <MessageVariable Name="codeValue" Index="1" />
          <MessageVariable Name="results-&gt;value" Index="2" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="5" Name="sceptre.cpp, line 218" Id="037307ee-0903-443b-8557-589c0613091d" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\projects\sceptre urc\sceptrevm\sceptrevm\sceptre.cpp" FileLine="218" FileColumn="1" FunctionName="saveCurrentMapping()" FunctionLineOffset="3" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='037307ee-0903-443b-8557-589c0613091d'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>211		//processing_previous_mapping_request = 1;
212		return code;
213		//deviceList[activeDeviceIndex].gestureCodeMap[gestureCode] = code;	
214	}
215	
216	void Sceptre::saveCurrentMapping() {
217		getActiveDevice()-&gt;gestureCodeMap[tempGestureCode] = *tempCode;
--&gt;218		Serial.print("Mapping stored is : "); Serial.print(tempGestureCode); Serial.print(" "); Serial.println(getActiveDevice()-&gt;gestureCodeMap[tempGestureCode].codeValue);
219	}
220	// TODO To check if code is invalid, codeLength will be 0 or lesser
221	Code* Sceptre::decodeAndGetCode() {
222		irrecv.decode(&amp;results);
223		Code* code = storeCode(&amp;results);
224		return code;
225	}
226	Code::~Code() {
227		Serial.println("Object is being destroyed");
</Source>
      </BreakPoint>
      <BreakPoint Index="6" Name="sceptre.cpp, line 96" Id="6a9df176-40ef-4c1b-8e75-1c8614654d84" Enabled="1" Message="{codeValue}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\projects\sceptre urc\sceptrevm\sceptrevm\sceptre.cpp" FileLine="96" FileColumn="1" FunctionName="sendCode(int repeat)" FunctionLineOffset="32" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='6a9df176-40ef-4c1b-8e75-1c8614654d84'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>89		delay(100);
90		::resetMyoDebugPinsCPP(HIGH);
91		delay(100);
92		::resetMyoDebugPinsCPP(LOW);
93		delay(100);
94		::resetMyoDebugPinsCPP(HIGH);
95		int codeType = code.codeType;
--&gt;96		unsigned long codeValue = code.codeValue;
97		unsigned int* rawCodes = code.rawCodes;
98		int codeLen = code.codeLen;
99		int toggle = code.toggle;
100		if (codeType == NEC) {
101			if (repeat) {
102				irsend.sendNEC(REPEAT, codeLen);
103				Serial.println("Sent NEC repeat");
104			}
105			else {
</Source>
        <MessageVariables>
          <MessageVariable Name="codeValue" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="7" Name="SceptreVM.ino, line 96" Id="8698bbad-aa57-480c-8f0d-94642ea83e8c" Enabled="1" Message="{count}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\projects\sceptre urc\sceptrevm\sceptrevm\sceptrevm.ino" FileLine="96" FileColumn="1" FunctionName="loop()" FunctionLineOffset="56" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='f50a49c4-4e1a-44d2-b9fd-18f1ef8f4520'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>89			digitalWrite(RECV_MODE_WAITING_FOR_MYO_PIN, HIGH);
90			int gestureCode=-1;
91			switch (count) {
92			case 0: gestureCode = FIST; break;
93			case 1: gestureCode = WAVE_OUT; break;
94			case 2: gestureCode = WAVE_IN; break;
95			}
--&gt;96			count++;
97			/*
98			Myo* myo = &amp;sceptre.myo;
99			do{
100				gestureCode = myo-&gt;getGestureCode();
101				delay(100);
102			} while (gestureCode == -1);
103			sceptre.tempGestureCode = gestureCode;
104			*/
105			// Debug via LED's
</Source>
        <MessageVariables>
          <MessageVariable Name="count" Index="1" />
        </MessageVariables>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>